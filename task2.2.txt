22.05.2020

Задание.

Реализовать консольную или графическую программу редактирования PE-файлов (форматы PE32 и PE32+).

Базовая функциональность (к сдаче не принимаются задания с функциональностью меньше базовой).
10 баллов.
Требования:
1. Поддерживать один из форматов PE32 или PE32+. // DONE
2. Редактирование основных полей NT-заголовка. // DONE
3. Редактирование всех полей элементов таблицы секций. // DONE
4. Обнуление элементов (адрес, размер) таблицы директорий. // DONE
+10

Полная функциональность
Требования (дополнительно к базовым):
1. Модификация таблицы релоков:
1) Модификация заголовка блока (размер, адрес), модификация элемента блока (тип, смещение).
2 балла. // DONE
2) Перенастройка всех корректируемых адресов на новый базовый адрес загрузки (с соответствующей корректировкой ImageBase).
2 балла. // DONE
3) Добавление нового блока, добавление нового элемента в блок.
2 балла. // DONE

+6

2. Модификация таблицы импорта.
1) Модификация дескриптора импорта (все поля), модификация имени библиотеки, модификация имени функции.
2 балла. // DONE
+2 балла за возможность указать новые имена библиотек и функций длиннее исходных (необходимо найти новую память). // DONE
2) Добавление дескриптора импорта, добавление новой функции в дескриптор импорта.
5 баллов. // DONE
3) Привязывать импорт. Две схемы. Для первой схемы необходимо только модифицировать директорию импорта. 
Для второй необходимо настроить новую (если в исходном файле она была, то модифицировать существующую) 
директорию привязанного импорта IMAGE_DIRECTORY_ENTRY_BOUND_IMPORT.
По 3 балла за каждую схему.

+9

3. Модификация таблицы экспорта.
1) Модификация имени библиотеки, модификация имени функции, адреса функции (по имени, по ординалу).
2 балла. // DONE
+2 балла за возможность указать новые имена библиотек и функций длиннее исходных (необходимо найти новую память). // DONE
2) Добавление новой функции (в массив адресов), добавление нового имени функции (в массив имён).
2 балла. // TODO
3) Перенаправление функции в другую библиотеку.
2 балла.

+4

4. Расширение размера файла (добавление новой секции либо расширение последней) для размещения добавляемых элементов 
(может понадобиться для других пунктов задания).
5 баллов. // DONE

+5

5. Для всей реализуемой функциональности поддерживать оба формата (PE32 и PE32+), динамически определяя формат при анализе файла.
5 баллов. // DONE

+5

на данный момент: 39

Указания и рекомендации.

Простое редактирование PE-файла (без увеличения размера) заключается в считывании файла в буфер, 
изменении нужных байт в буфере и записи буфера обратно на диск. При этом редактирование некоторых 
полей будет требовать обращение по относительным виртуальным адресам (RVA), которые корректны 
в загруженном образе программы. В данном же случае файл в памяти представляет из себя копию данных в файле,
поэтому необходимо будет переводить RVA в файловые смещения (и их уже прибавлять к адресу начала буфера).

Некоторые задания предполагают добавление новых элементов (или увеличение существующих). 
Для их размещения потребуется дополнительная память (в которой будут располагаться эти 
новые элементы либо в которую будет скопирована существующая таблица с новыми добавленными 
элементами). Без увеличения размера файла эту память можно поискать в области нулей выравнивания в конце секций. 
Более универсальным решением будет увеличение размера файла (если в конце PE-файла добавить произвольные байты, 
то его работоспособность не нарушится). Но простого увеличения файла будет недостаточно. Необходимо, чтобы новые 
данные проецировались при загрузке в образ программы, а для этого они должны попасть в какую-то секцию. Для этого 
можно добавить новую секцию (которой будут принадлежать новые данные файла) либо расширить последнюю (расширив её 
размер в файле за счёт новых данных).
